/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_MESSAGING_MESSAGING_PB_H_INCLUDED
#define PB_MESSAGING_MESSAGING_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Enum for distinguishing the type of requests */
typedef enum _messaging_RequestType {
    messaging_RequestType_REQUEST_DMX = 0,
    messaging_RequestType_REQUEST_POWER = 1,
    messaging_RequestType_REQUEST_ELEMETRY = 2,
    messaging_RequestType_REQUEST_CONFIGURATION = 3
} messaging_RequestType;

/* Enum for power devices */
typedef enum _messaging_PowerDevices {
    messaging_PowerDevices_FOG_MACHINE_A = 0 /* Add other power devices as needed */
} messaging_PowerDevices;

/* Enum for power request query */
typedef enum _messaging_PowerQuery {
    messaging_PowerQuery_UNDEFINED = 0, /* Query type is undefined */
    messaging_PowerQuery_CURRENTLY_USED = 1 /* Query for currently used power devices */
} messaging_PowerQuery;

/* Enum for telemetry request query */
typedef enum _messaging_TelemetryQuery {
    messaging_TelemetryQuery_TELEMETRY_ALL = 0,
    messaging_TelemetryQuery_TELEMETRY_TEMPERATURE = 1,
    messaging_TelemetryQuery_TELEMETRY_HUMIDITY = 2,
    messaging_TelemetryQuery_TELEMETRY_PEAK_BOOM = 3,
    messaging_TelemetryQuery_TELEMETRY_SYSTEM = 4
} messaging_TelemetryQuery;

/* Enum for configuration request query */
typedef enum _messaging_ConfigurationQuery {
    messaging_ConfigurationQuery_CONFIG_ALL = 0,
    messaging_ConfigurationQuery_CONFIG_BLOWER = 1
} messaging_ConfigurationQuery;

/* Enum for distinguishing the type of responses */
typedef enum _messaging_ResponseType {
    messaging_ResponseType_RESPONSE_DMX = 0,
    messaging_ResponseType_RESPONSE_POWER = 1,
    messaging_ResponseType_RESPONSE_TELEMETRY = 2,
    messaging_ResponseType_RESPONSE_CONFIGURATION = 3,
    messaging_ResponseType_RESPONSE_ERROR = 10 /* Added new response type */
} messaging_ResponseType;

/* Enum for Response status */
typedef enum _messaging_ResponseStatus {
    messaging_ResponseStatus_SUCCESS = 0,
    messaging_ResponseStatus_ERROR = 1
} messaging_ResponseStatus;

/* Enum for device types in ConfigurationResponse */
typedef enum _messaging_ConfigurationDeviceType {
    messaging_ConfigurationDeviceType_STAR = 0 /* Add other device types as needed */
} messaging_ConfigurationDeviceType;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(512) messaging_DmxRequest_values_t;
typedef struct _messaging_DmxRequest {
    messaging_DmxRequest_values_t values; /* Single sequence of DMX values, up to 512 values */
    bool ack; /* If true, an acknowledgement from the device is requested */
} messaging_DmxRequest;

/* These are settings that it's ok for the star to forget if it reboots. */
typedef struct _messaging_ConfigAmnesia {
    uint32_t fogOutputOnMinTime; /* When the fog outputs, how many ms will it output? */
    uint32_t fogOutputOnMaxTime; /* When the fog outputs, how many ms will it output? */
    uint32_t fogOutputOffMinTime; /* For the random output, what's the minumim value? */
    uint32_t fogOutputOffMaxTime; /* For the random output, what's the minumim value? */
    uint32_t fogActivateTime; /* Turn on the fog for this duration. */
    bool fogEnabled; /* Is the fog enabled? */
} messaging_ConfigAmnesia;

typedef struct _messaging_PowerRequest {
    pb_callback_t devices; /* Instruct the responder to use these powered devices and no other */
    messaging_PowerQuery query; /* The type of information about power devices requested */
} messaging_PowerRequest;

typedef struct _messaging_TelemetryRequest {
    messaging_TelemetryQuery query; /* Type of telemetry information requested */
} messaging_TelemetryRequest;

typedef struct _messaging_ConfigurationRequest {
    messaging_ConfigurationQuery query; /* Type of configuration information requested */
} messaging_ConfigurationRequest;

typedef struct _messaging_Request {
    messaging_RequestType type; /* Type of the request */
    pb_size_t which_request_payload;
    union {
        messaging_DmxRequest dmx_request;
        messaging_PowerRequest power_request;
        messaging_TelemetryRequest telemetry_request;
        messaging_ConfigurationRequest configuration_request;
    } request_payload;
    bool has_configAmnesia;
    messaging_ConfigAmnesia configAmnesia;
} messaging_Request;

typedef struct _messaging_DmxResponse {
    messaging_ResponseStatus status; /* This will only be returned if the request would like an acknowledgement */
} messaging_DmxResponse;

typedef struct _messaging_PowerResponse {
    pb_callback_t power_used; /* Devices that used power */
    pb_callback_t power_requested; /* Devices that requested power */
} messaging_PowerResponse;

typedef struct _messaging_TelemetryResponse {
    float temperature; /* Device temperature */
    float humidity; /* Device humidity */
    float peak_boom; /* Device peak boom */
    pb_callback_t chip_model; /* Device chip model */
    pb_callback_t chip_revision; /* Device chip revision */
    uint32_t chip_free_heap; /* Device chip free heap */
    pb_callback_t sdk_version; /* Device SDK version */
    pb_callback_t sketch_md5; /* Device sketch MD5 */
    uint32_t sketch_size; /* Device sketch size */
} messaging_TelemetryResponse;

typedef struct _messaging_ConfigurationResponse {
    messaging_ConfigurationDeviceType device_type; /* Type of the device */
    uint32_t blower; /* 8-bit value for blower */
} messaging_ConfigurationResponse;

/* Added new ErrorResponse */
typedef struct _messaging_ErrorResponse {
    pb_callback_t message; /* Description of the error */
} messaging_ErrorResponse;

typedef struct _messaging_Response {
    messaging_ResponseType type; /* Type of the response */
    pb_size_t which_response_payload;
    union {
        messaging_DmxResponse dmx_response;
        messaging_PowerResponse power_response;
        messaging_TelemetryResponse telemetry_response;
        messaging_ConfigurationResponse configuration_response;
        messaging_ErrorResponse error_response; /* Added ErrorResponse to the response payload */
    } response_payload;
} messaging_Response;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _messaging_RequestType_MIN messaging_RequestType_REQUEST_DMX
#define _messaging_RequestType_MAX messaging_RequestType_REQUEST_CONFIGURATION
#define _messaging_RequestType_ARRAYSIZE ((messaging_RequestType)(messaging_RequestType_REQUEST_CONFIGURATION+1))

#define _messaging_PowerDevices_MIN messaging_PowerDevices_FOG_MACHINE_A
#define _messaging_PowerDevices_MAX messaging_PowerDevices_FOG_MACHINE_A
#define _messaging_PowerDevices_ARRAYSIZE ((messaging_PowerDevices)(messaging_PowerDevices_FOG_MACHINE_A+1))

#define _messaging_PowerQuery_MIN messaging_PowerQuery_UNDEFINED
#define _messaging_PowerQuery_MAX messaging_PowerQuery_CURRENTLY_USED
#define _messaging_PowerQuery_ARRAYSIZE ((messaging_PowerQuery)(messaging_PowerQuery_CURRENTLY_USED+1))

#define _messaging_TelemetryQuery_MIN messaging_TelemetryQuery_TELEMETRY_ALL
#define _messaging_TelemetryQuery_MAX messaging_TelemetryQuery_TELEMETRY_SYSTEM
#define _messaging_TelemetryQuery_ARRAYSIZE ((messaging_TelemetryQuery)(messaging_TelemetryQuery_TELEMETRY_SYSTEM+1))

#define _messaging_ConfigurationQuery_MIN messaging_ConfigurationQuery_CONFIG_ALL
#define _messaging_ConfigurationQuery_MAX messaging_ConfigurationQuery_CONFIG_BLOWER
#define _messaging_ConfigurationQuery_ARRAYSIZE ((messaging_ConfigurationQuery)(messaging_ConfigurationQuery_CONFIG_BLOWER+1))

#define _messaging_ResponseType_MIN messaging_ResponseType_RESPONSE_DMX
#define _messaging_ResponseType_MAX messaging_ResponseType_RESPONSE_ERROR
#define _messaging_ResponseType_ARRAYSIZE ((messaging_ResponseType)(messaging_ResponseType_RESPONSE_ERROR+1))

#define _messaging_ResponseStatus_MIN messaging_ResponseStatus_SUCCESS
#define _messaging_ResponseStatus_MAX messaging_ResponseStatus_ERROR
#define _messaging_ResponseStatus_ARRAYSIZE ((messaging_ResponseStatus)(messaging_ResponseStatus_ERROR+1))

#define _messaging_ConfigurationDeviceType_MIN messaging_ConfigurationDeviceType_STAR
#define _messaging_ConfigurationDeviceType_MAX messaging_ConfigurationDeviceType_STAR
#define _messaging_ConfigurationDeviceType_ARRAYSIZE ((messaging_ConfigurationDeviceType)(messaging_ConfigurationDeviceType_STAR+1))



#define messaging_PowerRequest_devices_ENUMTYPE messaging_PowerDevices
#define messaging_PowerRequest_query_ENUMTYPE messaging_PowerQuery

#define messaging_TelemetryRequest_query_ENUMTYPE messaging_TelemetryQuery

#define messaging_ConfigurationRequest_query_ENUMTYPE messaging_ConfigurationQuery

#define messaging_Request_type_ENUMTYPE messaging_RequestType

#define messaging_DmxResponse_status_ENUMTYPE messaging_ResponseStatus

#define messaging_PowerResponse_power_used_ENUMTYPE messaging_PowerDevices
#define messaging_PowerResponse_power_requested_ENUMTYPE messaging_PowerDevices


#define messaging_ConfigurationResponse_device_type_ENUMTYPE messaging_ConfigurationDeviceType


#define messaging_Response_type_ENUMTYPE messaging_ResponseType


/* Initializer values for message structs */
#define messaging_DmxRequest_init_default        {{0, {0}}, 0}
#define messaging_ConfigAmnesia_init_default     {0, 0, 0, 0, 0, 0}
#define messaging_PowerRequest_init_default      {{{NULL}, NULL}, _messaging_PowerQuery_MIN}
#define messaging_TelemetryRequest_init_default  {_messaging_TelemetryQuery_MIN}
#define messaging_ConfigurationRequest_init_default {_messaging_ConfigurationQuery_MIN}
#define messaging_Request_init_default           {_messaging_RequestType_MIN, 0, {messaging_DmxRequest_init_default}, false, messaging_ConfigAmnesia_init_default}
#define messaging_DmxResponse_init_default       {_messaging_ResponseStatus_MIN}
#define messaging_PowerResponse_init_default     {{{NULL}, NULL}, {{NULL}, NULL}}
#define messaging_TelemetryResponse_init_default {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define messaging_ConfigurationResponse_init_default {_messaging_ConfigurationDeviceType_MIN, 0}
#define messaging_ErrorResponse_init_default     {{{NULL}, NULL}}
#define messaging_Response_init_default          {_messaging_ResponseType_MIN, 0, {messaging_DmxResponse_init_default}}
#define messaging_DmxRequest_init_zero           {{0, {0}}, 0}
#define messaging_ConfigAmnesia_init_zero        {0, 0, 0, 0, 0, 0}
#define messaging_PowerRequest_init_zero         {{{NULL}, NULL}, _messaging_PowerQuery_MIN}
#define messaging_TelemetryRequest_init_zero     {_messaging_TelemetryQuery_MIN}
#define messaging_ConfigurationRequest_init_zero {_messaging_ConfigurationQuery_MIN}
#define messaging_Request_init_zero              {_messaging_RequestType_MIN, 0, {messaging_DmxRequest_init_zero}, false, messaging_ConfigAmnesia_init_zero}
#define messaging_DmxResponse_init_zero          {_messaging_ResponseStatus_MIN}
#define messaging_PowerResponse_init_zero        {{{NULL}, NULL}, {{NULL}, NULL}}
#define messaging_TelemetryResponse_init_zero    {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define messaging_ConfigurationResponse_init_zero {_messaging_ConfigurationDeviceType_MIN, 0}
#define messaging_ErrorResponse_init_zero        {{{NULL}, NULL}}
#define messaging_Response_init_zero             {_messaging_ResponseType_MIN, 0, {messaging_DmxResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define messaging_DmxRequest_values_tag          1
#define messaging_DmxRequest_ack_tag             2
#define messaging_ConfigAmnesia_fogOutputOnMinTime_tag 1
#define messaging_ConfigAmnesia_fogOutputOnMaxTime_tag 2
#define messaging_ConfigAmnesia_fogOutputOffMinTime_tag 3
#define messaging_ConfigAmnesia_fogOutputOffMaxTime_tag 4
#define messaging_ConfigAmnesia_fogActivateTime_tag 5
#define messaging_ConfigAmnesia_fogEnabled_tag   6
#define messaging_PowerRequest_devices_tag       1
#define messaging_PowerRequest_query_tag         2
#define messaging_TelemetryRequest_query_tag     1
#define messaging_ConfigurationRequest_query_tag 1
#define messaging_Request_type_tag               1
#define messaging_Request_dmx_request_tag        2
#define messaging_Request_power_request_tag      3
#define messaging_Request_telemetry_request_tag  4
#define messaging_Request_configuration_request_tag 5
#define messaging_Request_configAmnesia_tag      10
#define messaging_DmxResponse_status_tag         1
#define messaging_PowerResponse_power_used_tag   1
#define messaging_PowerResponse_power_requested_tag 2
#define messaging_TelemetryResponse_temperature_tag 1
#define messaging_TelemetryResponse_humidity_tag 2
#define messaging_TelemetryResponse_peak_boom_tag 3
#define messaging_TelemetryResponse_chip_model_tag 4
#define messaging_TelemetryResponse_chip_revision_tag 5
#define messaging_TelemetryResponse_chip_free_heap_tag 6
#define messaging_TelemetryResponse_sdk_version_tag 7
#define messaging_TelemetryResponse_sketch_md5_tag 8
#define messaging_TelemetryResponse_sketch_size_tag 9
#define messaging_ConfigurationResponse_device_type_tag 1
#define messaging_ConfigurationResponse_blower_tag 2
#define messaging_ErrorResponse_message_tag      1
#define messaging_Response_type_tag              1
#define messaging_Response_dmx_response_tag      2
#define messaging_Response_power_response_tag    3
#define messaging_Response_telemetry_response_tag 4
#define messaging_Response_configuration_response_tag 5
#define messaging_Response_error_response_tag    6

/* Struct field encoding specification for nanopb */
#define messaging_DmxRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    values,            1) \
X(a, STATIC,   SINGULAR, BOOL,     ack,               2)
#define messaging_DmxRequest_CALLBACK NULL
#define messaging_DmxRequest_DEFAULT NULL

#define messaging_ConfigAmnesia_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   fogOutputOnMinTime,   1) \
X(a, STATIC,   SINGULAR, UINT32,   fogOutputOnMaxTime,   2) \
X(a, STATIC,   SINGULAR, UINT32,   fogOutputOffMinTime,   3) \
X(a, STATIC,   SINGULAR, UINT32,   fogOutputOffMaxTime,   4) \
X(a, STATIC,   SINGULAR, UINT32,   fogActivateTime,   5) \
X(a, STATIC,   SINGULAR, BOOL,     fogEnabled,        6)
#define messaging_ConfigAmnesia_CALLBACK NULL
#define messaging_ConfigAmnesia_DEFAULT NULL

#define messaging_PowerRequest_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UENUM,    devices,           1) \
X(a, STATIC,   SINGULAR, UENUM,    query,             2)
#define messaging_PowerRequest_CALLBACK pb_default_field_callback
#define messaging_PowerRequest_DEFAULT NULL

#define messaging_TelemetryRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    query,             1)
#define messaging_TelemetryRequest_CALLBACK NULL
#define messaging_TelemetryRequest_DEFAULT NULL

#define messaging_ConfigurationRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    query,             1)
#define messaging_ConfigurationRequest_CALLBACK NULL
#define messaging_ConfigurationRequest_DEFAULT NULL

#define messaging_Request_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request_payload,dmx_request,request_payload.dmx_request),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request_payload,power_request,request_payload.power_request),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request_payload,telemetry_request,request_payload.telemetry_request),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request_payload,configuration_request,request_payload.configuration_request),   5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  configAmnesia,    10)
#define messaging_Request_CALLBACK NULL
#define messaging_Request_DEFAULT NULL
#define messaging_Request_request_payload_dmx_request_MSGTYPE messaging_DmxRequest
#define messaging_Request_request_payload_power_request_MSGTYPE messaging_PowerRequest
#define messaging_Request_request_payload_telemetry_request_MSGTYPE messaging_TelemetryRequest
#define messaging_Request_request_payload_configuration_request_MSGTYPE messaging_ConfigurationRequest
#define messaging_Request_configAmnesia_MSGTYPE messaging_ConfigAmnesia

#define messaging_DmxResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    status,            1)
#define messaging_DmxResponse_CALLBACK NULL
#define messaging_DmxResponse_DEFAULT NULL

#define messaging_PowerResponse_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UENUM,    power_used,        1) \
X(a, CALLBACK, REPEATED, UENUM,    power_requested,   2)
#define messaging_PowerResponse_CALLBACK pb_default_field_callback
#define messaging_PowerResponse_DEFAULT NULL

#define messaging_TelemetryResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    peak_boom,         3) \
X(a, CALLBACK, SINGULAR, STRING,   chip_model,        4) \
X(a, CALLBACK, SINGULAR, STRING,   chip_revision,     5) \
X(a, STATIC,   SINGULAR, UINT32,   chip_free_heap,    6) \
X(a, CALLBACK, SINGULAR, STRING,   sdk_version,       7) \
X(a, CALLBACK, SINGULAR, STRING,   sketch_md5,        8) \
X(a, STATIC,   SINGULAR, UINT32,   sketch_size,       9)
#define messaging_TelemetryResponse_CALLBACK pb_default_field_callback
#define messaging_TelemetryResponse_DEFAULT NULL

#define messaging_ConfigurationResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    device_type,       1) \
X(a, STATIC,   SINGULAR, UINT32,   blower,            2)
#define messaging_ConfigurationResponse_CALLBACK NULL
#define messaging_ConfigurationResponse_DEFAULT NULL

#define messaging_ErrorResponse_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   message,           1)
#define messaging_ErrorResponse_CALLBACK pb_default_field_callback
#define messaging_ErrorResponse_DEFAULT NULL

#define messaging_Response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response_payload,dmx_response,response_payload.dmx_response),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response_payload,power_response,response_payload.power_response),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response_payload,telemetry_response,response_payload.telemetry_response),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response_payload,configuration_response,response_payload.configuration_response),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response_payload,error_response,response_payload.error_response),   6)
#define messaging_Response_CALLBACK NULL
#define messaging_Response_DEFAULT NULL
#define messaging_Response_response_payload_dmx_response_MSGTYPE messaging_DmxResponse
#define messaging_Response_response_payload_power_response_MSGTYPE messaging_PowerResponse
#define messaging_Response_response_payload_telemetry_response_MSGTYPE messaging_TelemetryResponse
#define messaging_Response_response_payload_configuration_response_MSGTYPE messaging_ConfigurationResponse
#define messaging_Response_response_payload_error_response_MSGTYPE messaging_ErrorResponse

extern const pb_msgdesc_t messaging_DmxRequest_msg;
extern const pb_msgdesc_t messaging_ConfigAmnesia_msg;
extern const pb_msgdesc_t messaging_PowerRequest_msg;
extern const pb_msgdesc_t messaging_TelemetryRequest_msg;
extern const pb_msgdesc_t messaging_ConfigurationRequest_msg;
extern const pb_msgdesc_t messaging_Request_msg;
extern const pb_msgdesc_t messaging_DmxResponse_msg;
extern const pb_msgdesc_t messaging_PowerResponse_msg;
extern const pb_msgdesc_t messaging_TelemetryResponse_msg;
extern const pb_msgdesc_t messaging_ConfigurationResponse_msg;
extern const pb_msgdesc_t messaging_ErrorResponse_msg;
extern const pb_msgdesc_t messaging_Response_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define messaging_DmxRequest_fields &messaging_DmxRequest_msg
#define messaging_ConfigAmnesia_fields &messaging_ConfigAmnesia_msg
#define messaging_PowerRequest_fields &messaging_PowerRequest_msg
#define messaging_TelemetryRequest_fields &messaging_TelemetryRequest_msg
#define messaging_ConfigurationRequest_fields &messaging_ConfigurationRequest_msg
#define messaging_Request_fields &messaging_Request_msg
#define messaging_DmxResponse_fields &messaging_DmxResponse_msg
#define messaging_PowerResponse_fields &messaging_PowerResponse_msg
#define messaging_TelemetryResponse_fields &messaging_TelemetryResponse_msg
#define messaging_ConfigurationResponse_fields &messaging_ConfigurationResponse_msg
#define messaging_ErrorResponse_fields &messaging_ErrorResponse_msg
#define messaging_Response_fields &messaging_Response_msg

/* Maximum encoded size of messages (where known) */
/* messaging_PowerRequest_size depends on runtime parameters */
/* messaging_Request_size depends on runtime parameters */
/* messaging_PowerResponse_size depends on runtime parameters */
/* messaging_TelemetryResponse_size depends on runtime parameters */
/* messaging_ErrorResponse_size depends on runtime parameters */
/* messaging_Response_size depends on runtime parameters */
#define messaging_ConfigAmnesia_size             32
#define messaging_ConfigurationRequest_size      2
#define messaging_ConfigurationResponse_size     8
#define messaging_DmxRequest_size                517
#define messaging_DmxResponse_size               2
#define messaging_TelemetryRequest_size          2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
